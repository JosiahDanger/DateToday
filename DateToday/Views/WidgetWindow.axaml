<Window x:Class="DateToday.Views.WidgetWindow"
        xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:conv="using:DateToday.Converters"
        xmlns:vm="using:DateToday.ViewModels"
        Title="Date Today"
        x:DataType="vm:WidgetViewModel"
        Background="Transparent"
        Focusable="False"
        Icon="/Assets/jd-logo.ico"
        ShowInTaskbar="False"
        SizeToContent="WidthAndHeight"
        SystemDecorations="None"
        WindowStartupLocation="Manual">

    <Design.DataContext>
        <!--
            This only sets the DataContext for the previewer in an IDE,
            to set the actual DataContext for runtime, set the DataContext property in code
            (look at App.axaml.cs)
        -->
    </Design.DataContext>

    <Window.Resources>
        <conv:ToBrushMultiConverterWithFallback x:Key="BrushSelector" />
    </Window.Resources>

    <Window.ContextMenu>
        <ContextMenu>
            <MenuItem Command="{Binding ReceiveNewSettings}"
                      Header="Widget Settings" />
            <MenuItem Command="{Binding ExitApplication}"
                      Header="Exit" />
        </ContextMenu>
    </Window.ContextMenu>

    <TextBlock FontFamily="{Binding FontFamily}"
               FontSize="{Binding FontSize}"
               FontWeight="{Binding FontWeight}"
               Text="{Binding DateText}">

        <TextBlock.Foreground>

            <MultiBinding Converter="{StaticResource BrushSelector}">

                <!--
                    The application will choose one of the two following Color values for conversion
                    into a SolidColorBrush. The chosen Color is determined by
                    'ToBrushMultiConverterWithFallback'; it will be the first non-null colour.
                    
                    In effect, if the user has selected a custom font colour, then it will be
                    applied to the widget, otherwise a thematically-appropriate automatic font
                    colour will be used.
                -->

                <Binding Path="CustomFontColour" />

                <Binding Path="AutomaticFontColour" />

            </MultiBinding>

        </TextBlock.Foreground>

    </TextBlock>

    <!-- Experimenting with Drop Shadow:
	
	        <TextBlock.Effect>
		
			    Drop shadow test.

                <DropShadowEffect BlurRadius="0"
                                  Opacity="1"
                                  Color="Magenta" />

            </TextBlock.Effect>-->

</Window>
